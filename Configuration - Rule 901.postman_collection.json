{
	"info": {
		"_postman_id": "db7fc255-ecd8-4650-8ac2-74cff7071abc",
		"name": "Configuration - Rule 901",
		"description": "## 20240507\n\nUpdated network map to remove the channel branching\n\nUpdate the rule configs to remove the \"outcome\" attribute\n\nUpdate the typology configs to replace the true/false weighting attributes with a weighting attribute\n\n## 20240621\n\nBug: Removed the activation of the network map step since it was causing two active network maps.\n\nUpdated the fetch of the network map ID to also deactive ALL active network maps\n\nRemoved the step to deactivate a specific network map by ID\n\n## 20240730\n\nUpdated the typology configuration for the MathJSON implementation\n\n## 20241008\n\nIntegrated EFRuP functionality",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29185806"
	},
	"item": [
		{
			"name": "Get Arango Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"//console.log(jsonData[\"jwt\"])\r",
							"\r",
							"pm.globals.set(\"arangoToken\", jsonData[\"jwt\"])\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"{{arangoUsername}}\",\r\n    \"password\": \"{{arangoPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{arangoUrl}}/_open/auth",
					"host": [
						"{{arangoUrl}}"
					],
					"path": [
						"_open",
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove all rule configurations",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Query successful\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{arangoToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"query\": \"FOR doc in {{db_config_rules}} REMOVE doc in {{db_config_rules}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{arangoUrl}}/_db/{{db_config_all}}/_api/cursor",
					"host": [
						"{{arangoUrl}}"
					],
					"path": [
						"_db",
						"{{db_config_all}}",
						"_api",
						"cursor"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove all typology configurations",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Query successful\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{arangoToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"query\": \"FOR doc in {{db_config_typologies}} REMOVE doc in {{db_config_typologies}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{arangoUrl}}/_db/{{db_config_all}}/_api/cursor",
					"host": [
						"{{arangoUrl}}"
					],
					"path": [
						"_db",
						"{{db_config_all}}",
						"_api",
						"cursor"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deactivate Active Network Maps",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resp = pm.response.json();",
							"",
							"if (resp.result.length < 1) {",
							"    console.log(`No active network maps found.`);",
							"} else {",
							"    console.log(`Deactivating network map _ids: ${resp.result}`);",
							"",
							"    for (let i = 0; i < resp.result.length; i++) {",
							"        const queryString = `UPDATE { _key: '${resp.result[i]}', active: false } IN ${pm.environment.get('db_config_route')}`;",
							"        const configPostRequest = {",
							"            url: `${pm.environment.get('arangoUrl')}/_db/${pm.environment.get('db_config_all')}/_api/cursor`,",
							"            method: 'POST',",
							"            header: { 'Authorization': `Bearer ${pm.globals.get(\"arangoToken\")}` },",
							"            body: {",
							"                mode: 'raw',",
							"                raw: JSON.stringify({",
							"                    query: queryString",
							"                })",
							"            }",
							"        };",
							"",
							"        (async () => {",
							"            await pm.sendRequest(configPostRequest, (error, response) => {",
							"                console.log(error ? error : response.json());",
							"",
							"                pm.test(\"Network map deactivation successful\", function () {",
							"                    pm.expect(response.code).to.equal(201);",
							"                });",
							"            });",
							"        }",
							"        )();",
							"    }",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{arangoToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"query\": \"FOR doc in {{db_config_route}} FILTER doc.active == true RETURN doc._key\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{arangoUrl}}/_db/{{db_config_all}}/_api/cursor",
					"host": [
						"{{arangoUrl}}"
					],
					"path": [
						"_db",
						"{{db_config_all}}",
						"_api",
						"cursor"
					]
				}
			},
			"response": []
		},
		{
			"name": "Insert rule configurations",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update successful\", function () {\r",
							"    pm.response.to.have.status(202);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{arangoToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"_key\": \"901@1.0.0@1.0.0\",\r\n        \"id\": \"901@1.0.0\",\r\n        \"cfg\": \"1.0.0\",\r\n        \"desc\": \"Number of outgoing transactions - debtor\",\r\n        \"config\": {\r\n            \"parameters\": {\r\n                \"maxQueryRange\": 86400000\r\n            },\r\n            \"exitConditions\": [\r\n                {\r\n                    \"subRuleRef\": \".x00\",\r\n                    \"reason\": \"Incoming transaction is unsuccessful\"\r\n                }\r\n            ],\r\n            \"bands\": [\r\n                {\r\n                    \"subRuleRef\": \".01\",\r\n                    \"upperLimit\": 2,\r\n                    \"reason\": \"The debtor has performed one transaction to date\"\r\n                },\r\n                {\r\n                    \"subRuleRef\": \".02\",\r\n                    \"lowerLimit\": 2,\r\n                    \"upperLimit\": 4,\r\n                    \"reason\": \"The debtor has performed two or three transactions to date\"\r\n                },\r\n                {\r\n                    \"subRuleRef\": \".03\",\r\n                    \"lowerLimit\": 4,\r\n                    \"reason\": \"The debtor has performed 4 or more transactions to date\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{arangoUrl}}/_db/{{db_config_all}}/_api/document/{{db_config_rules}}",
					"host": [
						"{{arangoUrl}}"
					],
					"path": [
						"_db",
						"{{db_config_all}}",
						"_api",
						"document",
						"{{db_config_rules}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Insert typology configurations",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update successful\", function () {\r",
							"    pm.response.to.have.status(202);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{arangoToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"_key\": \"999@1.0.0\",\r\n        \"desc\": \"Rule-901 Typology\",\r\n        \"id\": \"typology-processor@1.0.0\",\r\n        \"cfg\": \"999@1.0.0\",\r\n        \"workflow\": {\r\n            \"alertThreshold\": 200,\r\n            \"interdictionThreshold\": 400,\r\n            \"flowProcessor\": \"EFRuP@1.0.0\"\r\n        },\r\n        \"rules\": [\r\n            {\r\n                \"id\": \"901@1.0.0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"termId\": \"v901at100at100\",\r\n                \"wghts\": [\r\n                    {\r\n                        \"ref\": \".err\",\r\n                        \"wght\": \"0\"\r\n                    },\r\n                    {\r\n                        \"ref\": \".x00\",\r\n                        \"wght\": \"100\"\r\n                    },\r\n                    {\r\n                        \"ref\": \".01\",\r\n                        \"wght\": \"100\"\r\n                    },\r\n                    {\r\n                        \"ref\": \".02\",\r\n                        \"wght\": \"200\"\r\n                    },\r\n                    {\r\n                        \"ref\": \".03\",\r\n                        \"wght\": \"400\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"EFRuP@1.0.0\",\r\n                \"cfg\": \"none\",\r\n                \"termId\": \"vEFRuPat100atnone\",\r\n                \"wghts\": [\r\n                    {\r\n                        \"ref\": \".err\",\r\n                        \"wght\": \"0\"\r\n                    },\r\n                    {\r\n                        \"ref\": \"override\",\r\n                        \"wght\": \"0\"\r\n                    },\r\n                    {\r\n                        \"ref\": \"non-overridable-block\",\r\n                        \"wght\": \"0\"\r\n                    },\r\n                    {\r\n                        \"ref\": \"overridable-block\",\r\n                        \"wght\": \"0\"\r\n                    },\r\n                    {\r\n                        \"ref\": \"none\",\r\n                        \"wght\": \"0\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"expression\": [\r\n            \"Add\",\r\n            \"v901at100at100\"\r\n        ]\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{arangoUrl}}/_db/{{db_config_all}}/_api/document/{{db_config_typologies}}",
					"host": [
						"{{arangoUrl}}"
					],
					"path": [
						"_db",
						"{{db_config_all}}",
						"_api",
						"document",
						"{{db_config_typologies}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Insert routing configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update successful\", function () {\r",
							"    pm.response.to.have.status(202);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{arangoToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"active\": true,\r\n        \"cfg\": \"1.0.0\",\r\n        \"messages\": [\r\n            {\r\n                \"id\": \"004@1.0.0\",\r\n                \"cfg\": \"1.0.0\",\r\n                \"txTp\": \"pacs.002.001.12\",\r\n                \"typologies\": [\r\n                    {\r\n                        \"id\": \"typology-processor@1.0.0\",\r\n                        \"cfg\": \"999@1.0.0\",\r\n                        \"rules\": [\r\n                            {\r\n                                \"id\": \"901@1.0.0\",\r\n                                \"cfg\": \"1.0.0\"\r\n                            },\r\n                            {\r\n                                \"id\": \"EFRuP@1.0.0\",\r\n                                \"cfg\": \"none\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{arangoUrl}}/_db/{{db_config_all}}/_api/document/{{db_config_route}}",
					"host": [
						"{{arangoUrl}}"
					],
					"path": [
						"_db",
						"{{db_config_all}}",
						"_api",
						"document",
						"{{db_config_route}}"
					]
				}
			},
			"response": []
		}
	]
}